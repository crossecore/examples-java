package java_;
public interface Java_Factory extends org.eclipse.emf.ecore.EFactory{
	
	Annotation createAnnotation();
	Archive createArchive();
	AssertStatement createAssertStatement();
	AnnotationMemberValuePair createAnnotationMemberValuePair();
	AnnotationTypeDeclaration createAnnotationTypeDeclaration();
	AnnotationTypeMemberDeclaration createAnnotationTypeMemberDeclaration();
	AnonymousClassDeclaration createAnonymousClassDeclaration();
	ArrayAccess createArrayAccess();
	ArrayCreation createArrayCreation();
	ArrayInitializer createArrayInitializer();
	ArrayLengthAccess createArrayLengthAccess();
	ArrayType createArrayType();
	Assignment createAssignment();
	BooleanLiteral createBooleanLiteral();
	BlockComment createBlockComment();
	Block createBlock();
	BreakStatement createBreakStatement();
	CastExpression createCastExpression();
	CatchClause createCatchClause();
	CharacterLiteral createCharacterLiteral();
	ClassFile createClassFile();
	ClassInstanceCreation createClassInstanceCreation();
	ConstructorDeclaration createConstructorDeclaration();
	ConditionalExpression createConditionalExpression();
	ConstructorInvocation createConstructorInvocation();
	ClassDeclaration createClassDeclaration();
	CompilationUnit createCompilationUnit();
	ContinueStatement createContinueStatement();
	DoStatement createDoStatement();
	EmptyStatement createEmptyStatement();
	EnhancedForStatement createEnhancedForStatement();
	EnumConstantDeclaration createEnumConstantDeclaration();
	EnumDeclaration createEnumDeclaration();
	ExpressionStatement createExpressionStatement();
	FieldAccess createFieldAccess();
	FieldDeclaration createFieldDeclaration();
	ForStatement createForStatement();
	IfStatement createIfStatement();
	ImportDeclaration createImportDeclaration();
	InfixExpression createInfixExpression();
	Initializer createInitializer();
	InstanceofExpression createInstanceofExpression();
	InterfaceDeclaration createInterfaceDeclaration();
	Javadoc createJavadoc();
	LabeledStatement createLabeledStatement();
	LineComment createLineComment();
	Manifest createManifest();
	ManifestAttribute createManifestAttribute();
	ManifestEntry createManifestEntry();
	MemberRef createMemberRef();
	MethodDeclaration createMethodDeclaration();
	MethodInvocation createMethodInvocation();
	MethodRef createMethodRef();
	MethodRefParameter createMethodRefParameter();
	Model createModel();
	Modifier createModifier();
	NumberLiteral createNumberLiteral();
	NullLiteral createNullLiteral();
	Package createPackage();
	PackageAccess createPackageAccess();
	ParameterizedType createParameterizedType();
	ParenthesizedExpression createParenthesizedExpression();
	PostfixExpression createPostfixExpression();
	PrefixExpression createPrefixExpression();
	PrimitiveType createPrimitiveType();
	PrimitiveTypeBoolean createPrimitiveTypeBoolean();
	PrimitiveTypeByte createPrimitiveTypeByte();
	PrimitiveTypeChar createPrimitiveTypeChar();
	PrimitiveTypeDouble createPrimitiveTypeDouble();
	PrimitiveTypeShort createPrimitiveTypeShort();
	PrimitiveTypeFloat createPrimitiveTypeFloat();
	PrimitiveTypeInt createPrimitiveTypeInt();
	PrimitiveTypeLong createPrimitiveTypeLong();
	PrimitiveTypeVoid createPrimitiveTypeVoid();
	ReturnStatement createReturnStatement();
	SingleVariableAccess createSingleVariableAccess();
	SingleVariableDeclaration createSingleVariableDeclaration();
	StringLiteral createStringLiteral();
	SuperConstructorInvocation createSuperConstructorInvocation();
	SuperFieldAccess createSuperFieldAccess();
	SuperMethodInvocation createSuperMethodInvocation();
	SwitchCase createSwitchCase();
	SwitchStatement createSwitchStatement();
	SynchronizedStatement createSynchronizedStatement();
	TagElement createTagElement();
	TextElement createTextElement();
	ThisExpression createThisExpression();
	ThrowStatement createThrowStatement();
	TryStatement createTryStatement();
	TypeAccess createTypeAccess();
	TypeDeclarationStatement createTypeDeclarationStatement();
	TypeLiteral createTypeLiteral();
	TypeParameter createTypeParameter();
	UnresolvedItem createUnresolvedItem();
	UnresolvedItemAccess createUnresolvedItemAccess();
	UnresolvedAnnotationDeclaration createUnresolvedAnnotationDeclaration();
	UnresolvedAnnotationTypeMemberDeclaration createUnresolvedAnnotationTypeMemberDeclaration();
	UnresolvedClassDeclaration createUnresolvedClassDeclaration();
	UnresolvedEnumDeclaration createUnresolvedEnumDeclaration();
	UnresolvedInterfaceDeclaration createUnresolvedInterfaceDeclaration();
	UnresolvedLabeledStatement createUnresolvedLabeledStatement();
	UnresolvedMethodDeclaration createUnresolvedMethodDeclaration();
	UnresolvedSingleVariableDeclaration createUnresolvedSingleVariableDeclaration();
	UnresolvedType createUnresolvedType();
	UnresolvedTypeDeclaration createUnresolvedTypeDeclaration();
	UnresolvedVariableDeclarationFragment createUnresolvedVariableDeclarationFragment();
	VariableDeclarationExpression createVariableDeclarationExpression();
	VariableDeclarationFragment createVariableDeclarationFragment();
	VariableDeclarationStatement createVariableDeclarationStatement();
	WildCardType createWildCardType();
	WhileStatement createWhileStatement();
}

