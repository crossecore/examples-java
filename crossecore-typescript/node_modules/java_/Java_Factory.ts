import {EFactory} from "ecore/EFactory";
import {ForStatement} from "java_/ForStatement";
import {AnnotationMemberValuePair} from "java_/AnnotationMemberValuePair";
import {InstanceofExpression} from "java_/InstanceofExpression";
import {MemberRef} from "java_/MemberRef";
import {CompilationUnit} from "java_/CompilationUnit";
import {PrimitiveTypeShort} from "java_/PrimitiveTypeShort";
import {WildCardType} from "java_/WildCardType";
import {MethodInvocation} from "java_/MethodInvocation";
import {VariableDeclarationFragment} from "java_/VariableDeclarationFragment";
import {ConstructorDeclaration} from "java_/ConstructorDeclaration";
import {SuperConstructorInvocation} from "java_/SuperConstructorInvocation";
import {ContinueStatement} from "java_/ContinueStatement";
import {AbstractMethodInvocation} from "java_/AbstractMethodInvocation";
import {AbstractTypeDeclaration} from "java_/AbstractTypeDeclaration";
import {TextElement} from "java_/TextElement";
import {SwitchCase} from "java_/SwitchCase";
import {Statement} from "java_/Statement";
import {TypeDeclaration} from "java_/TypeDeclaration";
import {ClassFile} from "java_/ClassFile";
import {TypeParameter} from "java_/TypeParameter";
import {PrimitiveTypeVoid} from "java_/PrimitiveTypeVoid";
import {ThrowStatement} from "java_/ThrowStatement";
import {ThisExpression} from "java_/ThisExpression";
import {PostfixExpression} from "java_/PostfixExpression";
import {AbstractVariablesContainer} from "java_/AbstractVariablesContainer";
import {EnumConstantDeclaration} from "java_/EnumConstantDeclaration";
import {Archive} from "java_/Archive";
import {LineComment} from "java_/LineComment";
import {Package} from "java_/Package";
import {UnresolvedClassDeclaration} from "java_/UnresolvedClassDeclaration";
import {PrimitiveTypeLong} from "java_/PrimitiveTypeLong";
import {SingleVariableDeclaration} from "java_/SingleVariableDeclaration";
import {Modifier} from "java_/Modifier";
import {ArrayLengthAccess} from "java_/ArrayLengthAccess";
import {MethodDeclaration} from "java_/MethodDeclaration";
import {UnresolvedAnnotationTypeMemberDeclaration} from "java_/UnresolvedAnnotationTypeMemberDeclaration";
import {VariableDeclarationExpression} from "java_/VariableDeclarationExpression";
import {ManifestEntry} from "java_/ManifestEntry";
import {NullLiteral} from "java_/NullLiteral";
import {ParameterizedType} from "java_/ParameterizedType";
import {LabeledStatement} from "java_/LabeledStatement";
import {PrimitiveTypeDouble} from "java_/PrimitiveTypeDouble";
import {Annotation} from "java_/Annotation";
import {InterfaceDeclaration} from "java_/InterfaceDeclaration";
import {ReturnStatement} from "java_/ReturnStatement";
import {CharacterLiteral} from "java_/CharacterLiteral";
import {ClassInstanceCreation} from "java_/ClassInstanceCreation";
import {EnhancedForStatement} from "java_/EnhancedForStatement";
import {UnresolvedLabeledStatement} from "java_/UnresolvedLabeledStatement";
import {FieldAccess} from "java_/FieldAccess";
import {NamedElement} from "java_/NamedElement";
import {PrimitiveTypeChar} from "java_/PrimitiveTypeChar";
import {BodyDeclaration} from "java_/BodyDeclaration";
import {Javadoc} from "java_/Javadoc";
import {UnresolvedEnumDeclaration} from "java_/UnresolvedEnumDeclaration";
import {ArrayCreation} from "java_/ArrayCreation";
import {TypeDeclarationStatement} from "java_/TypeDeclarationStatement";
import {ArrayType} from "java_/ArrayType";
import {UnresolvedInterfaceDeclaration} from "java_/UnresolvedInterfaceDeclaration";
import {NumberLiteral} from "java_/NumberLiteral";
import {AbstractMethodDeclaration} from "java_/AbstractMethodDeclaration";
import {ImportDeclaration} from "java_/ImportDeclaration";
import {PrimitiveTypeFloat} from "java_/PrimitiveTypeFloat";
import {ConditionalExpression} from "java_/ConditionalExpression";
import {VariableDeclarationStatement} from "java_/VariableDeclarationStatement";
import {Block} from "java_/Block";
import {Model} from "java_/Model";
import {BooleanLiteral} from "java_/BooleanLiteral";
import {AbstractTypeQualifiedExpression} from "java_/AbstractTypeQualifiedExpression";
import {AnonymousClassDeclaration} from "java_/AnonymousClassDeclaration";
import {IfStatement} from "java_/IfStatement";
import {UnresolvedAnnotationDeclaration} from "java_/UnresolvedAnnotationDeclaration";
import {PrefixExpression} from "java_/PrefixExpression";
import {ClassDeclaration} from "java_/ClassDeclaration";
import {Type} from "java_/Type";
import {ASTNode} from "java_/ASTNode";
import {BreakStatement} from "java_/BreakStatement";
import {UnresolvedItem} from "java_/UnresolvedItem";
import {BlockComment} from "java_/BlockComment";
import {ArrayAccess} from "java_/ArrayAccess";
import {TypeAccess} from "java_/TypeAccess";
import {WhileStatement} from "java_/WhileStatement";
import {CatchClause} from "java_/CatchClause";
import {UnresolvedSingleVariableDeclaration} from "java_/UnresolvedSingleVariableDeclaration";
import {NamespaceAccess} from "java_/NamespaceAccess";
import {CastExpression} from "java_/CastExpression";
import {Expression} from "java_/Expression";
import {ParenthesizedExpression} from "java_/ParenthesizedExpression";
import {SuperFieldAccess} from "java_/SuperFieldAccess";
import {ConstructorInvocation} from "java_/ConstructorInvocation";
import {SingleVariableAccess} from "java_/SingleVariableAccess";
import {MethodRef} from "java_/MethodRef";
import {AnnotationTypeDeclaration} from "java_/AnnotationTypeDeclaration";
import {DoStatement} from "java_/DoStatement";
import {EnumDeclaration} from "java_/EnumDeclaration";
import {SuperMethodInvocation} from "java_/SuperMethodInvocation";
import {StringLiteral} from "java_/StringLiteral";
import {UnresolvedTypeDeclaration} from "java_/UnresolvedTypeDeclaration";
import {Comment} from "java_/Comment";
import {TypeLiteral} from "java_/TypeLiteral";
import {Initializer} from "java_/Initializer";
import {PrimitiveType} from "java_/PrimitiveType";
import {AssertStatement} from "java_/AssertStatement";
import {FieldDeclaration} from "java_/FieldDeclaration";
import {PackageAccess} from "java_/PackageAccess";
import {VariableDeclaration} from "java_/VariableDeclaration";
import {UnresolvedVariableDeclarationFragment} from "java_/UnresolvedVariableDeclarationFragment";
import {ManifestAttribute} from "java_/ManifestAttribute";
import {UnresolvedMethodDeclaration} from "java_/UnresolvedMethodDeclaration";
import {Manifest} from "java_/Manifest";
import {SwitchStatement} from "java_/SwitchStatement";
import {PrimitiveTypeInt} from "java_/PrimitiveTypeInt";
import {SynchronizedStatement} from "java_/SynchronizedStatement";
import {ArrayInitializer} from "java_/ArrayInitializer";
import {PrimitiveTypeByte} from "java_/PrimitiveTypeByte";
import {UnresolvedItemAccess} from "java_/UnresolvedItemAccess";
import {MethodRefParameter} from "java_/MethodRefParameter";
import {TryStatement} from "java_/TryStatement";
import {Assignment} from "java_/Assignment";
import {InfixExpression} from "java_/InfixExpression";
import {AnnotationTypeMemberDeclaration} from "java_/AnnotationTypeMemberDeclaration";
import {PrimitiveTypeBoolean} from "java_/PrimitiveTypeBoolean";
import {EmptyStatement} from "java_/EmptyStatement";
import {UnresolvedType} from "java_/UnresolvedType";
import {TagElement} from "java_/TagElement";
import {ExpressionStatement} from "java_/ExpressionStatement";
export interface Java_Factory extends EFactory{
	createAbstractMethodDeclaration():AbstractMethodDeclaration;
	createAbstractMethodInvocation():AbstractMethodInvocation;
	createAbstractTypeDeclaration():AbstractTypeDeclaration;
	createAbstractTypeQualifiedExpression():AbstractTypeQualifiedExpression;
	createAbstractVariablesContainer():AbstractVariablesContainer;
	createAnnotation():Annotation;
	createArchive():Archive;
	createAssertStatement():AssertStatement;
	createASTNode():ASTNode;
	createAnnotationMemberValuePair():AnnotationMemberValuePair;
	createAnnotationTypeDeclaration():AnnotationTypeDeclaration;
	createAnnotationTypeMemberDeclaration():AnnotationTypeMemberDeclaration;
	createAnonymousClassDeclaration():AnonymousClassDeclaration;
	createArrayAccess():ArrayAccess;
	createArrayCreation():ArrayCreation;
	createArrayInitializer():ArrayInitializer;
	createArrayLengthAccess():ArrayLengthAccess;
	createArrayType():ArrayType;
	createAssignment():Assignment;
	createBodyDeclaration():BodyDeclaration;
	createBooleanLiteral():BooleanLiteral;
	createBlockComment():BlockComment;
	createBlock():Block;
	createBreakStatement():BreakStatement;
	createCastExpression():CastExpression;
	createCatchClause():CatchClause;
	createCharacterLiteral():CharacterLiteral;
	createClassFile():ClassFile;
	createClassInstanceCreation():ClassInstanceCreation;
	createConstructorDeclaration():ConstructorDeclaration;
	createConditionalExpression():ConditionalExpression;
	createConstructorInvocation():ConstructorInvocation;
	createClassDeclaration():ClassDeclaration;
	createComment():Comment;
	createCompilationUnit():CompilationUnit;
	createContinueStatement():ContinueStatement;
	createDoStatement():DoStatement;
	createEmptyStatement():EmptyStatement;
	createEnhancedForStatement():EnhancedForStatement;
	createEnumConstantDeclaration():EnumConstantDeclaration;
	createEnumDeclaration():EnumDeclaration;
	createExpression():Expression;
	createExpressionStatement():ExpressionStatement;
	createFieldAccess():FieldAccess;
	createFieldDeclaration():FieldDeclaration;
	createForStatement():ForStatement;
	createIfStatement():IfStatement;
	createImportDeclaration():ImportDeclaration;
	createInfixExpression():InfixExpression;
	createInitializer():Initializer;
	createInstanceofExpression():InstanceofExpression;
	createInterfaceDeclaration():InterfaceDeclaration;
	createJavadoc():Javadoc;
	createLabeledStatement():LabeledStatement;
	createLineComment():LineComment;
	createManifest():Manifest;
	createManifestAttribute():ManifestAttribute;
	createManifestEntry():ManifestEntry;
	createMemberRef():MemberRef;
	createMethodDeclaration():MethodDeclaration;
	createMethodInvocation():MethodInvocation;
	createMethodRef():MethodRef;
	createMethodRefParameter():MethodRefParameter;
	createModel():Model;
	createModifier():Modifier;
	createNamedElement():NamedElement;
	createNamespaceAccess():NamespaceAccess;
	createNumberLiteral():NumberLiteral;
	createNullLiteral():NullLiteral;
	createPackage():Package;
	createPackageAccess():PackageAccess;
	createParameterizedType():ParameterizedType;
	createParenthesizedExpression():ParenthesizedExpression;
	createPostfixExpression():PostfixExpression;
	createPrefixExpression():PrefixExpression;
	createPrimitiveType():PrimitiveType;
	createPrimitiveTypeBoolean():PrimitiveTypeBoolean;
	createPrimitiveTypeByte():PrimitiveTypeByte;
	createPrimitiveTypeChar():PrimitiveTypeChar;
	createPrimitiveTypeDouble():PrimitiveTypeDouble;
	createPrimitiveTypeShort():PrimitiveTypeShort;
	createPrimitiveTypeFloat():PrimitiveTypeFloat;
	createPrimitiveTypeInt():PrimitiveTypeInt;
	createPrimitiveTypeLong():PrimitiveTypeLong;
	createPrimitiveTypeVoid():PrimitiveTypeVoid;
	createReturnStatement():ReturnStatement;
	createSingleVariableAccess():SingleVariableAccess;
	createSingleVariableDeclaration():SingleVariableDeclaration;
	createStatement():Statement;
	createStringLiteral():StringLiteral;
	createSuperConstructorInvocation():SuperConstructorInvocation;
	createSuperFieldAccess():SuperFieldAccess;
	createSuperMethodInvocation():SuperMethodInvocation;
	createSwitchCase():SwitchCase;
	createSwitchStatement():SwitchStatement;
	createSynchronizedStatement():SynchronizedStatement;
	createTagElement():TagElement;
	createTextElement():TextElement;
	createThisExpression():ThisExpression;
	createThrowStatement():ThrowStatement;
	createTryStatement():TryStatement;
	createType():Type;
	createTypeAccess():TypeAccess;
	createTypeDeclaration():TypeDeclaration;
	createTypeDeclarationStatement():TypeDeclarationStatement;
	createTypeLiteral():TypeLiteral;
	createTypeParameter():TypeParameter;
	createUnresolvedItem():UnresolvedItem;
	createUnresolvedItemAccess():UnresolvedItemAccess;
	createUnresolvedAnnotationDeclaration():UnresolvedAnnotationDeclaration;
	createUnresolvedAnnotationTypeMemberDeclaration():UnresolvedAnnotationTypeMemberDeclaration;
	createUnresolvedClassDeclaration():UnresolvedClassDeclaration;
	createUnresolvedEnumDeclaration():UnresolvedEnumDeclaration;
	createUnresolvedInterfaceDeclaration():UnresolvedInterfaceDeclaration;
	createUnresolvedLabeledStatement():UnresolvedLabeledStatement;
	createUnresolvedMethodDeclaration():UnresolvedMethodDeclaration;
	createUnresolvedSingleVariableDeclaration():UnresolvedSingleVariableDeclaration;
	createUnresolvedType():UnresolvedType;
	createUnresolvedTypeDeclaration():UnresolvedTypeDeclaration;
	createUnresolvedVariableDeclarationFragment():UnresolvedVariableDeclarationFragment;
	createVariableDeclaration():VariableDeclaration;
	createVariableDeclarationExpression():VariableDeclarationExpression;
	createVariableDeclarationFragment():VariableDeclarationFragment;
	createVariableDeclarationStatement():VariableDeclarationStatement;
	createWildCardType():WildCardType;
	createWhileStatement():WhileStatement;
}
