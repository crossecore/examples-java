import {Set} from "ecore/Set";
import {UnresolvedItemAccess} from "java_/UnresolvedItemAccess";
import {ENotificationImpl} from "ecore/ENotificationImpl";
import {BasicEObjectImpl} from "ecore/BasicEObjectImpl";
import {EClass} from "ecore/EClass";
import {ExpressionImpl} from "java_/ExpressionImpl";
import {InternalEObject} from "ecore/InternalEObject";
import {Java_PackageLiterals} from "java_/Java_PackageLiterals";
import {UnresolvedItem} from "java_/UnresolvedItem";
import {ASTNode} from "java_/ASTNode";
import {NotificationImpl} from "ecore/NotificationImpl";
import {NotificationChain} from "ecore/NotificationChain";
import {NamespaceAccessImpl} from "java_/NamespaceAccessImpl";
		
			export class UnresolvedItemAccessBase
			extends ExpressionImpl
			implements UnresolvedItemAccess
			{
				private _element:UnresolvedItem = null;
				get element():UnresolvedItem{
				
					return this._element;
				}
				set element(value:UnresolvedItem) {
					let oldvalue = this._element;
					this._element = value;
					if (this.eNotificationRequired()){
						this.eNotify(new ENotificationImpl(this, NotificationImpl.SET,Java_PackageLiterals.UNRESOLVEDITEMACCESS_ELEMENT , oldvalue, value));
					}
				}
				private _qualifier:ASTNode = null;
				get qualifier():ASTNode{
				
					return this._qualifier;
				}
				set qualifier(value:ASTNode) {
					if (value != this._qualifier) {
						let msgs:NotificationChain = null;
						if (this._qualifier != null){
							msgs = (this._qualifier).eInverseRemove(this, BasicEObjectImpl.EOPPOSITE_FEATURE_BASE - Java_PackageLiterals.UNRESOLVEDITEMACCESS_QUALIFIER, /*null*/ null , msgs);
						}
						if (value != null){
							msgs = value.eInverseAdd(this, BasicEObjectImpl.EOPPOSITE_FEATURE_BASE - Java_PackageLiterals.UNRESOLVEDITEMACCESS_QUALIFIER, /*null*/ null, msgs);
						}
						msgs = this.basicSetQualifier(value, msgs);
						if (msgs != null) {
							msgs.dispatch();
						}
					}
					else if (this.eNotificationRequired()){
						this.eNotify(new ENotificationImpl(this, NotificationImpl.SET,Java_PackageLiterals.UNRESOLVEDITEMACCESS_QUALIFIER , value, value));
					}
				}

			
				/* do not override from BasicEObject!
				protected eStaticClass():EClass{
					//return Java_PackageLiterals.UNRESOLVEDITEMACCESS;
					return null;
				}
				*/
			
			
				public basicSetQualifier(newobj:ASTNode, msgs:NotificationChain):NotificationChain {
					let oldobj = this._qualifier;
					this._qualifier = newobj;
					if (this.eNotificationRequired()) {
						let notification = new ENotificationImpl(this, NotificationImpl.SET, Java_PackageLiterals.UNRESOLVEDITEMACCESS_QUALIFIER, oldobj, newobj);
						if (msgs == null){
							msgs = notification;
						}
						else{
							msgs.add(notification);
						}
					}
					return msgs;
				}
				public basicSetElement(newobj:UnresolvedItem, msgs:NotificationChain):NotificationChain {
					let oldobj = this._element;
					this._element = newobj;
					if (this.eNotificationRequired()) {
						let notification = new ENotificationImpl(this, NotificationImpl.SET, Java_PackageLiterals.UNRESOLVEDITEMACCESS_ELEMENT, oldobj, newobj);
						if (msgs == null){
							msgs = notification;
						}
						else{
							msgs.add(notification);
						}
					}
					return msgs;
				}
				
			
				public eGet_number_boolean_boolean(featureID:number, resolve:boolean, coreType:boolean):any{
					switch (featureID) {
						case Java_PackageLiterals.UNRESOLVEDITEMACCESS_COMMENTS:
							return this.comments;
						case Java_PackageLiterals.UNRESOLVEDITEMACCESS_ORIGINALCOMPILATIONUNIT:
							return this.originalCompilationUnit;
						case Java_PackageLiterals.UNRESOLVEDITEMACCESS_ORIGINALCLASSFILE:
							return this.originalClassFile;
						case Java_PackageLiterals.UNRESOLVEDITEMACCESS_ELEMENT:
							return this.element;
						case Java_PackageLiterals.UNRESOLVEDITEMACCESS_QUALIFIER:
							return this.qualifier;
					}
					//return this.eGetFromExpression(featureID, resolve, coreType);
					return super.eGet(featureID, resolve, coreType);
				}
				
				public eSet_number_any(featureID:number, newValue:any):void {
					switch (featureID) {
						case Java_PackageLiterals.UNRESOLVEDITEMACCESS_ELEMENT:
							this.element = <UnresolvedItem> newValue;
							return;
						case Java_PackageLiterals.UNRESOLVEDITEMACCESS_QUALIFIER:
							this.qualifier = <ASTNode> newValue;
							return;
					}
					super.eSet_number_any(featureID, newValue);
				}

				public eBaseStructuralFeatureID(derivedFeatureID:number, baseClass:Function):number {
					if (baseClass instanceof NamespaceAccessImpl) {
						switch (derivedFeatureID) {
							default: return -1;
						}
					}
					return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
				}
				
							
				public eDerivedStructuralFeatureID(baseFeatureID:number, baseClass:Function):number {
					if (baseClass instanceof NamespaceAccessImpl) {
						switch (baseFeatureID) {
							default: return -1;
						}
					}
					return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
				}
				
			}
			
