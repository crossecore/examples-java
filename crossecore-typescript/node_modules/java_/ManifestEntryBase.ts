import {Set} from "ecore/Set";
import {AbstractCollection} from "ecore/AbstractCollection";
import {ENotificationImpl} from "ecore/ENotificationImpl";
import {Bag} from "ecore/Bag";
import {BasicEObjectImpl} from "ecore/BasicEObjectImpl";
import {EClass} from "ecore/EClass";
import {ManifestEntry} from "java_/ManifestEntry";
import {InternalEObject} from "ecore/InternalEObject";
import {Java_PackageLiterals} from "java_/Java_PackageLiterals";
import {ManifestAttribute} from "java_/ManifestAttribute";
import {EObject} from "ecore/EObject";
import {NotificationImpl} from "ecore/NotificationImpl";
import {NotificationChain} from "ecore/NotificationChain";
		
			export class ManifestEntryBase
			extends BasicEObjectImpl
			implements ManifestEntry
			{
				private _name:string = "";
				get name():string{
					return this._name;
				}
				set name(value:string){
					this._name = value; 
				}
				private _attributes:Set<ManifestAttribute> = null;
				get attributes():Set<ManifestAttribute>{
					if(this._attributes===null){
						this._attributes = new Set<ManifestAttribute>(this, Java_PackageLiterals.MANIFESTENTRY_ATTRIBUTES, BasicEObjectImpl.EOPPOSITE_FEATURE_BASE - Java_PackageLiterals.MANIFESTENTRY_ATTRIBUTES);
							
					}
					return this._attributes;
					
				}
				
				

			
				/* do not override from BasicEObject!
				protected eStaticClass():EClass{
					//return Java_PackageLiterals.MANIFESTENTRY;
					return null;
				}
				*/
			
			
			
				public eGet_number_boolean_boolean(featureID:number, resolve:boolean, coreType:boolean):any{
					switch (featureID) {
						case Java_PackageLiterals.MANIFESTENTRY_NAME:
							return this.name;
						case Java_PackageLiterals.MANIFESTENTRY_ATTRIBUTES:
							return this.attributes;
					}
					//return this.eGetFromBasicEObjectImpl(featureID, resolve, coreType);
					return super.eGet(featureID, resolve, coreType);
				}
				
				public eSet_number_any(featureID:number, newValue:any):void {
					switch (featureID) {
						case Java_PackageLiterals.MANIFESTENTRY_NAME:
							this.name = <string> newValue;
							return;
						case Java_PackageLiterals.MANIFESTENTRY_ATTRIBUTES:
							this.attributes.clear();
							this.attributes.concat((newValue as AbstractCollection<EObject>).map(i => i as ManifestAttribute));
							return;
					}
					super.eSet_number_any(featureID, newValue);
				}

				
			}
			
